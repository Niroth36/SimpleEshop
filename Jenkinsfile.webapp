   // Jenkinsfile for building and deploying the SimpleEshop web application
   // This pipeline now runs directly on the Jenkins controller to bypass Kubernetes pod scheduling issues
   // This is a temporary solution until the pod scheduling issues can be resolved
   pipeline {
       // Run directly on the Jenkins controller instead of using Kubernetes pods
       agent any

       environment {
           DOCKER_HUB_CREDS = credentials('docker-hub-credentials')
           DOCKER_IMAGE = 'niroth36/simpleeshop'
           DOCKER_TAG = "${env.BUILD_NUMBER}"
       }

       stages {
           stage('Checkout') {
               steps {
                   // Print debugging information
                   echo "Starting pipeline on Jenkins controller"
                   echo "Running on node: ${env.NODE_NAME}"

                   // Proceed with checkout
                   checkout scm
                   script {
                       env.IMAGE_TAG = sh(
                           script: "git rev-parse --short HEAD",
                           returnStdout: true
                       ).trim()
                       env.BUILD_NUMBER_TAG = "${env.BUILD_NUMBER}-${env.IMAGE_TAG}"
                       env.FULL_IMAGE_TAG = "${DOCKER_IMAGE}:${BUILD_NUMBER_TAG}"
                   }
                   echo "Building: ${env.FULL_IMAGE_TAG}"
               }
           }

           stage('Check for Web App Changes') {
               steps {
                   script {
                       // Get the list of changed files
                       def changedFiles = sh(script: 'git diff --name-only HEAD^ HEAD || echo "first-build"', returnStdout: true).trim()

                       // Check if any files in the web-app directory have changed
                       def webAppChanged = sh(script: 'git diff --name-only HEAD^ HEAD | grep -q "^web-app/" && echo "true" || echo "false"', returnStdout: true).trim()

                       if (changedFiles == "first-build") {
                           echo "First build or no previous commit - proceeding with build"
                           env.SHOULD_BUILD = "true"
                       } else if (webAppChanged == "true") {
                           echo "Changes detected in web-app directory. Proceeding with build."
                           env.SHOULD_BUILD = "true"
                       } else {
                           echo "No changes detected in web-app directory. Skipping build."
                           env.SHOULD_BUILD = "false"
                           currentBuild.result = 'SUCCESS'
                       }
                   }
               }
           }

           stage('Install Dependencies') {
               when {
                   environment name: 'SHOULD_BUILD', value: 'true'
               }
               steps {
                   dir('web-app/server') {
                       script {
                           if (!fileExists('package-lock.json')) {
                               echo "package-lock.json not found, running npm install to generate it"
                               sh 'npm install'
                           } else {
                               sh 'npm ci || npm install'
                           }
                       }
                   }
               }
           }

           stage('Lint') {
               when {
                   environment name: 'SHOULD_BUILD', value: 'true'
               }
               steps {
                   dir('web-app/server') {
                       // Add linting if you have ESLint configured
                       sh 'echo "Linting would run here if configured"'
                   }
               }
           }

           stage('Test') {
               when {
                   environment name: 'SHOULD_BUILD', value: 'true'
               }
               steps {
                   dir('web-app/server') {
                       // Run tests if you have them configured
                       sh 'echo "Tests would run here if configured"'
                   }
                   // Integration tests can now run directly on the Jenkins controller
                   echo "Running integration tests"
                   sh 'cd ../../ && ./test-integration.sh || echo "Integration tests failed but continuing"'
               }
           }

           stage('Build and Push Docker Image') {
               when {
                   environment name: 'SHOULD_BUILD', value: 'true'
               }
               steps {
                   script {
                       // Build the Docker image
                       sh "docker build -t ${DOCKER_IMAGE}:${BUILD_NUMBER_TAG} -t ${DOCKER_IMAGE}:latest -f Dockerfile.x86 ."

                       // Login to Docker Hub
                       sh "echo ${DOCKER_HUB_CREDS_PSW} | docker login -u ${DOCKER_HUB_CREDS_USR} --password-stdin"

                       // Push the Docker images
                       sh "docker push ${DOCKER_IMAGE}:${BUILD_NUMBER_TAG}"
                       sh "docker push ${DOCKER_IMAGE}:latest"

                       echo "Image built and pushed: ${DOCKER_IMAGE}:${BUILD_NUMBER_TAG}"
                   }
               }
           }

           stage('Update Kubernetes Manifests') {
               when {
                   environment name: 'SHOULD_BUILD', value: 'true'
               }
               steps {
                   script {
                       withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                           sh """
                               git config user.email "jenkins@simpleeshop.local"
                               git config user.name "Jenkins CI/CD"

                               echo "Looking for deployment manifests..."
                               find kubernetes/ -name "*deployment*.yaml" -type f | head -5

                               if [ -f kubernetes/applications/simpleeshop-deployment.yaml ]; then
                                   echo "Updating kubernetes/applications/simpleeshop-deployment.yaml"
                                   sed -i "s|image: ${DOCKER_IMAGE}:.*|image: ${FULL_IMAGE_TAG}|g" kubernetes/applications/simpleeshop-deployment.yaml
                                   grep "image:" kubernetes/applications/simpleeshop-deployment.yaml
                               elif [ -f kubernetes/simpleeshop-deployment.yaml ]; then
                                   echo "Updating kubernetes/simpleeshop-deployment.yaml"
                                   sed -i "s|image: ${DOCKER_IMAGE}:.*|image: ${FULL_IMAGE_TAG}|g" kubernetes/simpleeshop-deployment.yaml
                                   grep "image:" kubernetes/simpleeshop-deployment.yaml
                               else
                                   echo "Searching for any deployment file with simpleeshop..."
                                   find . -name "*simpleeshop*deployment*.yaml" -type f
                                   find . -name "*deployment*.yaml" -type f | grep -i simple || echo "No simpleeshop deployment found"
                               fi

                               if git diff --quiet; then
                                   echo "No changes to commit"
                               else
                                   echo "Changes detected, committing..."
                                   git add kubernetes/
                                   git commit -m "Update web-app image to ${BUILD_NUMBER_TAG}"
                                   git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/Niroth36/SimpleEshop.git HEAD:main
                                   echo "Kubernetes manifests updated!"
                               fi
                           """
                       }
                   }
               }
           }
       }

       post {
           always {
               node('') {
                   deleteDir()
               }
           }
           success {
               script {
                   if (env.SHOULD_BUILD == "true") {
                       echo """
                       SUCCESS: Web App Pipeline completed successfully!

                       Image: ${FULL_IMAGE_TAG}
                       Deployment: Updated via GitOps
                       """
                   } else {
                       echo "Web App Pipeline completed successfully! (No changes detected)"
                   }
               }
           }
           failure {
               echo """
               FAILED: Web App Pipeline failed!

               Check the logs for more details. Common issues:
               - Pod scheduling issues (resource constraints)
               - Image pull failures
               - Secret mounting problems

               Build: ${BUILD_NUMBER} | Commit: ${env.IMAGE_TAG ?: 'unknown'}
               """
           }
       }
   }
