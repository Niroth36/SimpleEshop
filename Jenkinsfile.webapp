pipeline {
    agent any
    
    environment {
        DOCKER_HUB_CREDS = credentials('docker-hub-credentials')
        DOCKER_IMAGE = 'niroth36/simpleeshop'
        GITOPS_REPO = 'https://github.com/Niroth36/simpleeshop-gitops.git'
        GITOPS_CREDENTIALS = 'github-credentials'
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
                script {
                    // Generate image tag from git commit
                    env.IMAGE_TAG = sh(
                        script: "git rev-parse --short HEAD",
                        returnStdout: true
                    ).trim()
                    env.BUILD_NUMBER_TAG = "${env.BUILD_NUMBER}-${env.IMAGE_TAG}"
                    env.FULL_IMAGE_TAG = "${DOCKER_IMAGE}:${BUILD_NUMBER_TAG}"
                }
                echo "üèóÔ∏è Building: ${env.FULL_IMAGE_TAG}"
            }
        }
        
        stage('Install Dependencies') {
            steps {
                dir('web-app') {
                    sh 'npm ci'
                }
            }
        }
        
        stage('Run Tests') {
            parallel {
                stage('Unit Tests') {
                    steps {
                        dir('web-app') {
                            sh 'npm test || true'
                        }
                    }
                }
                stage('Lint Code') {
                    steps {
                        dir('web-app') {
                            sh 'npm run lint || echo "Lint not configured"'
                        }
                    }
                }
            }
        }
        
        stage('Build Multi-Arch Docker Image') {
            steps {
                script {
                    sh """
                        # Set up Docker buildx
                        docker buildx create --name mybuilder --use || true
                        docker buildx inspect --bootstrap

                        # Login to Docker Hub
                        echo ${DOCKER_HUB_CREDS_PSW} | docker login -u ${DOCKER_HUB_CREDS_USR} --password-stdin

                        # Build and push multi-arch image
                        docker buildx build \\
                            --platform linux/amd64,linux/arm64 \\
                            --tag ${FULL_IMAGE_TAG} \\
                            --tag ${DOCKER_IMAGE}:latest \\
                            --file Dockerfile.x86 \\
                            --push \\
                            .

                        echo "‚úÖ Multi-arch image built and pushed: ${FULL_IMAGE_TAG}"
                    """
                }
            }
        }
        
        stage('Update GitOps Repository') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: GITOPS_CREDENTIALS, usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                        sh """
                            # Clean workspace
                            rm -rf gitops-repo

                            # Configure git
                            git config --global user.email "jenkins@simpleeshop.local"
                            git config --global user.name "Jenkins CI/CD"

                            # Clone GitOps repository
                            git clone https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/Niroth36/simpleeshop-gitops.git gitops-repo
                            cd gitops-repo

                            # Update image tag in deployment manifest
                            if [ -f applications/simpleeshop/simpleeshop-deployment.yaml ]; then
                                sed -i 's|image: ${DOCKER_IMAGE}:.*|image: ${FULL_IMAGE_TAG}|g' applications/simpleeshop/simpleeshop-deployment.yaml

                                # Verify the change
                                echo "üìù Updated deployment manifest:"
                                grep "image:" applications/simpleeshop/simpleeshop-deployment.yaml

                                # Commit and push changes
                                git add applications/simpleeshop/simpleeshop-deployment.yaml

                                if git diff --staged --quiet; then
                                    echo "‚ÑπÔ∏è No changes to commit"
                                else
                                    git commit -m "üöÄ Deploy ${env.APP_NAME} ${BUILD_NUMBER_TAG}

                                - Jenkins Build: #${BUILD_NUMBER}
                                - Git Commit: ${IMAGE_TAG}
                                - Docker Image: ${FULL_IMAGE_TAG}
                                - Multi-arch: linux/amd64,linux/arm64
                                - Timestamp: \$(date -u +"%Y-%m-%d %H:%M:%S UTC")"

                                    git push origin main
                                    echo "‚úÖ GitOps repository updated successfully!"
                                fi
                            else
                                echo "‚ö†Ô∏è Deployment manifest not found"
                                ls -la applications/simpleeshop/ || echo "Directory not found"
                            fi
                        """
                    }
                }
            }
        }
    }
    
    post {
        always {
            // Clean up
            sh """
                docker logout || true
                rm -rf gitops-repo || true
                docker system prune -f || true
            """
        }

        success {
            echo """
            üéâ SUCCESS: SimpleEshop CI/CD Pipeline Completed!

            üì¶ Image Details:
               - Tag: ${BUILD_NUMBER_TAG}
               - Full Image: ${FULL_IMAGE_TAG}
               - Architectures: linux/amd64, linux/arm64

            üöÄ Deployment:
               - GitOps Repo Updated: ‚úÖ
               - ArgoCD Sync: Automatic
               - Application URL: http://4.210.149.226:30000
            """
        }

        failure {
            echo """
            ‚ùå FAILED: SimpleEshop CI/CD Pipeline Failed!

            üîç Check the Jenkins console output for details
            üìã Build Details:
               - Build Number: ${BUILD_NUMBER}
               - Commit: ${env.IMAGE_TAG}
            """
        }
    }
}